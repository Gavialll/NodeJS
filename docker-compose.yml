version: '3.8'

services:
  postgres:
    image: postgres
    container_name: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=mydatabase
    ports:
      - "5432:5432"
    networks:
      - my-network
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 5s
      retries: 5
      timeout: 5s

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - "5672:5672"  # Основний порт для обміну повідомленнями
      - "15672:15672"  # Веб-інтерфейс управління RabbitMQ
    networks:
      - my-network
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "check_running" ]
      interval: 10s
      retries: 5
      timeout: 5s

# Додав для тесту. В docker_compose запускається контейнер для міграції
  migration:
    build: .
    container_name: migration
    networks:
      - my-network
    depends_on:
      postgres:
        condition: service_healthy
    command: npm run migration

  nodejs-app:
    build: .
    container_name: DealService
    ports:
      - "3000:3000"
    networks:
      - my-network
    depends_on:
      migration:
        condition: service_completed_successfully
      rabbitmq:
        condition: service_healthy

networks:
  my-network:
    driver: bridge