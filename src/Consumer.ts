import amqp from 'amqplib';

export async function consumeMessages(): Promise<void> {
    try {
        // –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ RabbitMQ
        const connection = await amqp.connect('amqp://localhost');
        const channel = await connection.createChannel();

        // –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —á–µ—Ä–≥–∏
        const queue = 'test_queue';
        await channel.assertQueue(queue, { durable: true });

        console.log('üîî –û—á—ñ–∫—É–≤–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å...');

        // –û–±—Ä–æ–±–∫–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
        channel.consume(queue, (message) => {
            if (message !== null) {
                const receivedMessage = JSON.parse(message.content.toString());
                console.log('üì• –û—Ç—Ä–∏–º–∞–Ω–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:', receivedMessage);

                // –ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –æ–±—Ä–æ–±–∫–∏
                channel.ack(message);
            }
        });
    } catch (error) {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å:', error);
    }
}
